version: '3.8'

services:
    alpine:
        build:
            context: backend
            dockerfile: Dockerfile
        container_name: symfony_docker
        restart: on-failure
        ports:
            - "1234:80"
        volumes:
            - ./backend/conf/site.conf:/etc/nginx/http.d/default.conf
            - ./backend/src:/var/www/html
        networks:
            - acpSymfony

    db:
        image: mariadb:10.8.2
        container_name: mariadb_docker
        restart: always
        volumes:
            - db-data:/var/lib/mysql
        environment:
            MYSQL_ROOT_PASSWORD: 'ChangeMeLater'
        networks:
            - acpSymfony
            
    frontend:
        container_name: react_docker
        build:
            context: client
            dockerfile: Dockerfile
        volumes:
        - './client:/app'
        - '/app/node_modules'
        ports:
        - 3001:3000
        environment:
        - CHOKIDAR_USEPOLLING=true
        networks:
            - acpSymfony

    phpmyadmin:
        image: phpmyadmin
        container_name: phpmyadmin_docker
        restart: always
        depends_on:
            - db
        ports:
            - "8080:80"
        environment:
            PMA_HOST: db
        networks:
            - acpSymfony

    caddy:
        image: dunglas/mercure
        restart: unless-stopped
        container_name: mercure_docker
        environment:
            SERVER_NAME: ':80'
            MERCURE_PUBLISHER_JWT_KEY: 'Ae5I//FZ79GhkoRFRKio78*vrvELVc34v79Za'
            MERCURE_SUBSCRIBER_JWT_KEY: 'Ae5I//FZ79GhkoRFRKio78*vrvELVc34v79Za'
            MERCURE_EXTRA_DIRECTIVES:
                cors_origins "http://localhost:3001"
                cors_origins "http://localhost:3000"
                cors_origins "http://localhost:8245"
                cors_origins "http://localhost:1234"
                
        command: /usr/bin/caddy run -config /etc/caddy/Caddyfile.dev
        ports:
            - "9090:80"
            - "443:443"
        volumes:
           - caddy_data:/data
           - caddy_config:/config
        networks:
            - acpSymfony
volumes:
    db-data:
    caddy_data:
    caddy_config:

networks:
    acpSymfony:
